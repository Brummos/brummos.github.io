import React, {type ReactElement, type ReactNode} from 'react' // TODO apply types everywhere
import {NextIntlClientProvider, hasLocale} from 'next-intl'
import {ThemeProvider} from 'next-themes'
import {notFound} from 'next/navigation'
import {routing} from '@/i18n/routing'
import {Figtree} from 'next/font/google'
import Header from '../../components/Header'
import MenuBar from '@/components/MenuBar'
import Footer from '@/components/Footer'
import LightCursorEffectProvider2 from '@/providers/LightCursorEffectProvider2'
import type {Metadata} from 'next'
import type {PathParams} from '@/types'
import './globals.css'

const figtree = Figtree({
  subsets: ['latin']
})

export const metadata: Metadata = {
  // TODO create some metadata
  title: 'Create Next App',
  description: 'Generated by create next app'
}

type Props = {
  children: ReactNode
  modal: ReactNode
  params: Promise<PathParams>
}

const RootLayout = async ({children, modal, params}: Readonly<Props>): Promise<ReactElement> => {
  const {locale} = await params
  if (!hasLocale(routing.locales, locale)) {
    notFound() // TODO check if this even triggers, cause it seems to redirect
  }

  return (
    <html lang={locale} suppressHydrationWarning>
      <body id="myScrollableDiv" className={`${figtree.className} bg-[#262D37] relative antialiased`}>
        <LightCursorEffectProvider2>
          <ThemeProvider enableSystem>
            <NextIntlClientProvider>
              <Header />
              <MenuBar />
              <main
                style={{
                  position: 'relative',
                  zIndex: 1,
                  marginBottom: 300,
                  backgroundColor: '#262D37'
                }}
              >
                {modal}
                {children}
              </main>
              <Footer />
            </NextIntlClientProvider>
          </ThemeProvider>
        </LightCursorEffectProvider2>
      </body>
    </html>
  )
}

export default RootLayout
